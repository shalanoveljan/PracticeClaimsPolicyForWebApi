// <auto-generated />
using System;
using Lesson30_WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lesson30_WebApi.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20220227172859_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lesson30_WebApi.Data.DbQueries.StudentCourseQuery", b =>
                {
                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("StudentCourseQueries");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblCourse");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.Gender", b =>
                {
                    b.Property<int>("Idx")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Idx");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GendexrId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Surname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("GendexrId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.StudentCourse", b =>
                {
                    b.Property<int>("StudentTestId")
                        .HasColumnType("int");

                    b.Property<int>("CoursexId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentTestId", "CoursexId");

                    b.HasIndex("CoursexId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.Student", b =>
                {
                    b.HasOne("Lesson30_WebApi.Data.Entitites.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GendexrId");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.StudentCourse", b =>
                {
                    b.HasOne("Lesson30_WebApi.Data.Entitites.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CoursexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lesson30_WebApi.Data.Entitites.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.Gender", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Lesson30_WebApi.Data.Entitites.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
